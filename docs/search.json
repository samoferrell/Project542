[
  {
    "objectID": "ProjectWork.html",
    "href": "ProjectWork.html",
    "title": "ProjectWork",
    "section": "",
    "text": "Data Handling\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata &lt;- read_csv(\"actual_data_merge (1).csv\") |&gt;\nselect(-c(1))\n\nNew names:\nRows: 1282 Columns: 56\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): Name, Category, geometry dbl (52): ...1, ID, NEAR_DIST, Interview,\nShape_Leng, Shape_Area, Region, AU... lgl (1): JUL_2023\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n  rowsums &lt;- data |&gt;\n  select(AUG_2019_dummy:SEP_2023_dummy) |&gt;\n  mutate(total = rowSums(across(everything()), na.rm = TRUE))\n\ndata$total_fires &lt;- rowsums$total\n\n\n\ndata2 &lt;-  data |&gt;\n  pivot_longer(cols = colnames(data[,9:23]), names_to = \"YearMonth\", values_to = \"Occurence\" ) |&gt;\n  select(ID, YearMonth, NEAR_DIST, Name, Category, Interview, Shape_Leng, Shape_Area, Region, YearMonth, total_fires, everything())\ndata2\n\n# A tibble: 19,230 × 43\n           ID YearMonth NEAR_DIST Name  Category Interview Shape_Leng Shape_Area\n        &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1    3.00e10 AUG_2019       11.6 Novo… Agrovila         1      4473.    491009.\n 2    3.00e10 AUG_2020       11.6 Novo… Agrovila         1      4473.    491009.\n 3    3.00e10 AUG_2021       11.6 Novo… Agrovila         1      4473.    491009.\n 4    3.00e10 AUG_2022       11.6 Novo… Agrovila         1      4473.    491009.\n 5    3.00e10 AUG_2023       11.6 Novo… Agrovila         1      4473.    491009.\n 6    3.00e10 JUL_2019       11.6 Novo… Agrovila         1      4473.    491009.\n 7    3.00e10 JUL_2020       11.6 Novo… Agrovila         1      4473.    491009.\n 8    3.00e10 JUL_2021       11.6 Novo… Agrovila         1      4473.    491009.\n 9    3.00e10 JUL_2022       11.6 Novo… Agrovila         1      4473.    491009.\n10    3.00e10 JUL_2023       11.6 Novo… Agrovila         1      4473.    491009.\n# ℹ 19,220 more rows\n# ℹ 35 more variables: Region &lt;dbl&gt;, total_fires &lt;dbl&gt;, `Grand Tota` &lt;dbl&gt;,\n#   geometry &lt;chr&gt;, AUG_2019_dummy &lt;dbl&gt;, AUG_2020_dummy &lt;dbl&gt;,\n#   AUG_2021_dummy &lt;dbl&gt;, AUG_2022_dummy &lt;dbl&gt;, AUG_2023_dummy &lt;dbl&gt;,\n#   JUL_2019_dummy &lt;dbl&gt;, JUL_2020_dummy &lt;dbl&gt;, JUL_2021_dummy &lt;dbl&gt;,\n#   JUL_2022_dummy &lt;dbl&gt;, SEP_2019_dummy &lt;dbl&gt;, SEP_2020_dummy &lt;dbl&gt;,\n#   SEP_2021_dummy &lt;dbl&gt;, SEP_2022_dummy &lt;dbl&gt;, SEP_2023_dummy &lt;dbl&gt;, …"
  },
  {
    "objectID": "JAGSattempt.html",
    "href": "JAGSattempt.html",
    "title": "Fire Determinant Project",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE)\n\nSys.setenv(JAGS_HOME=\"C:/Program Files/JAGS/JAGS-4.3.1\")\n\nlibrary(rjags)\n\nWarning: package 'rjags' was built under R version 4.3.3\n\n\nLoading required package: coda\n\n\nLinked to JAGS 4.3.1\n\n\nLoaded modules: basemod,bugs\n\nlibrary(MASS)\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::select() masks MASS::select()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata &lt;- read_csv(\"actual_data_merge (1).csv\")\n\nNew names:\nRows: 1282 Columns: 56\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): Name, Category, geometry dbl (52): ...1, ID, NEAR_DIST, Interview,\nShape_Leng, Shape_Area, Region, AU... lgl (1): JUL_2023\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nrowsums &lt;- data |&gt;\n  select(27:40) |&gt;\n  mutate(total = rowSums(across(everything()), na.rm = TRUE))\n\ndata$total_fires &lt;- rowsums$total\n# \n# \n# \n# \n# data2 &lt;-  data |&gt;\n#   select(-1) |&gt;\n#   pivot_longer(cols = colnames(data[,27:40]), names_to = \"YearMonth\", values_to = \"Occurrence\" )\nAdding new variable - takes on 1 if a fire occured, 0 if not:\nbernoulli &lt;- data |&gt;\n  mutate(fire = ifelse(total_fires &gt; 0,1,0))\n#View(bernoulli)\nTrying with bernoulli data:"
  },
  {
    "objectID": "JAGSattempt.html#tables",
    "href": "JAGSattempt.html#tables",
    "title": "Fire Determinant Project",
    "section": "Tables",
    "text": "Tables\nCount of fire occurrence by region\n\nregion_fire &lt;- table(bernoulli$Region, bernoulli$fire)\ndimnames(region_fire) &lt;- list(\n  \"Region\" = c(\"1\", \"2\", \"3\"),\n  \"Occurence of at least one fire\" = c(\"No\", \"Yes\"))\nregion_fire\n\n      Occurence of at least one fire\nRegion  No Yes\n     1 291  85\n     2 417  61\n     3 367  61\n\n\nRegion and Category counts\n\ndata3 &lt;- bernoulli\ntable(data3$Region, data3$Category, dnn=c(\"Region\",\"Name of Category\"))\n\n      Name of Category\nRegion Agropolis Agrovila Crossroad Ruropolis\n     1        39      267        70         0\n     2        69      404         5         0\n     3        55      326         8        39"
  },
  {
    "objectID": "JAGSattempt.html#bar-graphs",
    "href": "JAGSattempt.html#bar-graphs",
    "title": "Fire Determinant Project",
    "section": "Bar Graphs",
    "text": "Bar Graphs\n\ndf &lt;- as.data.frame(region_fire)\nggplot(df, aes(x = Region, y = Freq, fill = Occurence.of.at.least.one.fire)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Occurrence of Fire by Region\",\n       x = \"Region\",\n       y = \"Count\",\n       fill = \"Occurrence of Fire\") +\n    scale_fill_manual(values = c(\"No\" = \"skyblue\", \"Yes\" = \"maroon\")) \n\n\n\n\n\n\n\n\nRegion 1 appears to have the most fires. We should note that this graph looks skewed because\nPercentage of yes with respect to each region:\n\nlibrary(tidyverse)\npercent &lt;- bernoulli |&gt;\n  group_by(Region) |&gt;\n  mutate (Region = as.factor(Region)) |&gt;\n  summarize(percent = sum(fire)/ n() * 100)\n\n\nggplot(percent, aes(x = Region, y = percent, fill = Region)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Percentage of Relative Fire Occurences by Region\",\n       x = \"Region\",\n       y = \"Percentage\")"
  },
  {
    "objectID": "JAGSattempt.html#plots",
    "href": "JAGSattempt.html#plots",
    "title": "Fire Determinant Project",
    "section": "Plots",
    "text": "Plots\nAverage hectacre of burned area, grouped by region, over time.\n\nfiltered &lt;- bernoulli |&gt;\n  group_by(Region) |&gt;\n  filter(fire == \"1\") |&gt;\n  select(Region,10:24)\n\nPivoting\n\npivot &lt;- filtered |&gt;\n  pivot_longer(\n    cols = starts_with(\"AUG\") | starts_with(\"JUL\") | starts_with(\"SEP\"),\n    names_to = \"month_year\",\n    values_to = \"area_burned\") |&gt;\n    mutate(year = substr(month_year, nchar(month_year) - 3, nchar(month_year)),\n           monthpre = substr(month_year, 1, 3),\n           # reordering month for plots\n           month = factor(monthpre, levels = c(\"JUL\",\"AUG\",\"SEP\")),\n           \n    Region = as.factor(Region))\n\n\nmonth_summary &lt;- pivot |&gt;\n  group_by(Region,year,month) |&gt;\n  summarize(mean_area_burned = (mean(area_burned, na.rm = TRUE)))\n\n`summarise()` has grouped output by 'Region', 'year'. You can override using\nthe `.groups` argument.\n\n\n\nyear_summary &lt;- pivot |&gt;\n    group_by(Region,year) |&gt;\n    summarize(mean_area_burned = (mean(area_burned, na.rm = TRUE)))\n\n`summarise()` has grouped output by 'Region'. You can override using the\n`.groups` argument.\n\n\n\nhead(year_summary)\n\n# A tibble: 6 × 3\n# Groups:   Region [2]\n  Region year  mean_area_burned\n  &lt;fct&gt;  &lt;chr&gt;            &lt;dbl&gt;\n1 1      2019             5.26 \n2 1      2020             7.12 \n3 1      2021             2.18 \n4 1      2022             2.47 \n5 1      2023             0.592\n6 2      2019             5.89 \n\nhead(month_summary)\n\n# A tibble: 6 × 4\n# Groups:   Region, year [2]\n  Region year  month mean_area_burned\n  &lt;fct&gt;  &lt;chr&gt; &lt;fct&gt;            &lt;dbl&gt;\n1 1      2019  JUL             0.831 \n2 1      2019  AUG            12.6   \n3 1      2019  SEP             4.12  \n4 1      2020  JUL             2.01  \n5 1      2020  AUG             0.0979\n6 1      2020  SEP             9.35  \n\n\n\nggplot(year_summary, aes(x = year, y = mean_area_burned, \n                         color = Region, group = Region)) +\n  geom_point(size = 3) +\n  geom_line() +\n  labs(title = \"Average Area Burned per Year, Grouped by Region\")\n\n\n\n\n\n\n\n\n\nggplot(month_summary, aes(x = month, y = mean_area_burned, \n                         color = year, group = year)) +\n  geom_point(size = 3) +\n  geom_line() +\n  facet_grid(year ~ Region) +\n  labs(title = \"Average Area Burned per Month, Grouped by Year and Region\")\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_line()`)."
  },
  {
    "objectID": "JAGSattempt.html#boxplots",
    "href": "JAGSattempt.html#boxplots",
    "title": "Fire Determinant Project",
    "section": "Boxplots",
    "text": "Boxplots\n\npivot_filtered &lt;- pivot |&gt;\n  filter(!is.na(area_burned))\nggplot(pivot_filtered, aes(x = Region, y = area_burned, fill = Region)) +\n  geom_boxplot() +\n  facet_wrap(~ year) \n\n\n\n\n\n\n\n\nOutlier removal - source: https://sqlpad.io/tutorial/remove-outliers/\n\nremoveOutliers &lt;- function(data, column_name) {\n  Q1 &lt;- quantile(data[[column_name]], 0.25)\n  Q3 &lt;- quantile(data[[column_name]], 0.75)\n  IQR &lt;- Q3 - Q1\n  lower_bound &lt;- Q1 - 1.5 * IQR\n  upper_bound &lt;- Q3 + 1.5 * IQR\n  return(data[data[[column_name]] &gt;= lower_bound & data[[column_name]] &lt;= upper_bound, ])\n}\n\nApplying function:\n\nboxplot_no_outliers &lt;- removeOutliers(data = pivot_filtered, column_name = \"area_burned\")\n\n\nggplot(boxplot_no_outliers, aes(x = Region, y = area_burned, fill = Region)) +\n  geom_boxplot() +\n  facet_wrap(~ year) \n\n\n\n\n\n\n\n\n\nggplot(boxplot_no_outliers, aes(x = month, y = area_burned, fill = month)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(boxplot_no_outliers, aes(x = area_burned)) +\n  geom_histogram(\n    bins = 20,               \n    fill = \"lightblue\",   \n    color = \"black\") +\n  labs(title = \"Histogram of Area Burned\", \n       x = \"Area Burned\",                       \n       y = \"Frequency\") +\n facet_wrap(~ month)"
  },
  {
    "objectID": "JAGSattempt.html#only-main-effect-for-all-terms",
    "href": "JAGSattempt.html#only-main-effect-for-all-terms",
    "title": "Fire Determinant Project",
    "section": "Only main effect for all terms",
    "text": "Only main effect for all terms\n\nmodel_string &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i] + beta3*x3[i] + beta4*x4[i] \n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n    beta3 ~ dnorm(0, 1/(10)^2)\n    beta4 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng, x3 = bernoulli$Shape_Area, x4 = bernoulli$Region)\n\nmodel &lt;- jags.model(model_string,data = data_jags, n.chains=3,quiet=TRUE)\nupdate(model, 100, progress.bar=\"none\")\nparams  &lt;- c(\"beta0\", \"beta1\",\"beta2\",\"beta3\",\"beta4\")\nsamples &lt;- coda.samples(model, \n           variable.names=params, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -2.357e+00 4.304e-01 7.858e-03      5.881e-02\nbeta1  2.457e-02 1.232e-02 2.250e-04      7.808e-04\nbeta2  1.185e-04 7.441e-05 1.359e-06      1.067e-05\nbeta3  1.405e-07 9.306e-08 1.699e-09      1.052e-08\nbeta4 -1.754e-01 1.087e-01 1.985e-03      9.343e-03\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.304e+00 -2.602e+00 -2.332e+00 -2.109e+00 -1.517e+00\nbeta1 -1.423e-03  1.668e-02  2.505e-02  3.310e-02  4.782e-02\nbeta2 -1.579e-05  6.718e-05  1.137e-04  1.656e-04  2.779e-04\nbeta3 -4.352e-08  7.792e-08  1.411e-07  2.032e-07  3.212e-07\nbeta4 -3.942e-01 -2.476e-01 -1.754e-01 -1.047e-01  4.117e-02\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC    &lt;- dic.samples(model,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC\n\nMean deviance:  1060 \npenalty 5.367 \nPenalized deviance: 1065 \n\n\n\nb0 &lt;- c(samples[[1]][,1],samples[[2]][,1])\nb1 &lt;- c(samples[[1]][,2],samples[[2]][,2])\nb2 &lt;- c(samples[[1]][,3],samples[[2]][,3])\nb3 &lt;- c(samples[[1]][,4],samples[[2]][,4])\nb4 &lt;- c(samples[[1]][,5],samples[[2]][,5])"
  },
  {
    "objectID": "JAGSattempt.html#prediction",
    "href": "JAGSattempt.html#prediction",
    "title": "Fire Determinant Project",
    "section": "Prediction",
    "text": "Prediction\n\n# Combine results from 3 different chains into one by stacking matrices that contain simulations.\nmod1_csim = as.mcmc(do.call(rbind, samples))\n\n# Extract posterior mean of coefficients\npm_coef = colMeans(mod1_csim)\n\n# The matrix multiplication below gives the exponentiation part in equation which will then be used to find estimated probabilities.\n\npredictors &lt;- matrix(c(bernoulli$NEAR_DIST, bernoulli$Shape_Leng, bernoulli$Shape_Area, bernoulli$Region), nrow = 1282, ncol = 4)\n\npm_Xb = pm_coef[\"beta0\"] + predictors %*% pm_coef[1:4] \n# Intercept + Design Matrix*Coefficients\n\n# extract probability (basically undo logit link)\nphat = 1.0 / (1.0 + exp(-pm_Xb))  \n# Predicted probabilities that the Outcome = 1 for each observations\n\nplot(phat, jitter(bernoulli$fire))\n\n\n\n\n\n\n\n(tab0.5 = table(phat &gt; 0.5, bernoulli$fire))\n\n       \n           0    1\n  FALSE   22    3\n  TRUE  1053  204"
  },
  {
    "objectID": "JAGSattempt.html#main-effects-of-first-three-vars",
    "href": "JAGSattempt.html#main-effects-of-first-three-vars",
    "title": "Fire Determinant Project",
    "section": "Main effects of first three vars",
    "text": "Main effects of first three vars\n\nmodel_string2 &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i] + beta3*x3[i]\n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n    beta3 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags2 = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng, x3 = bernoulli$Shape_Area)\n\nmodel2 &lt;- jags.model(model_string2,data = data_jags2, n.chains=3,quiet=TRUE)\nupdate(model2, 100, progress.bar=\"none\")\nparams2  &lt;- c(\"beta0\", \"beta1\",\"beta2\",\"beta3\")\nsamples2 &lt;- coda.samples(model2, \n           variable.names=params2, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples2)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -2.928e+00 2.783e-01 5.081e-03      2.879e-02\nbeta1  2.872e-02 1.164e-02 2.126e-04      6.918e-04\nbeta2  1.682e-04 6.646e-05 1.213e-06      9.395e-06\nbeta3  8.511e-08 8.513e-08 1.554e-09      9.503e-09\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.549e+00 -3.095e+00 -2.919e+00 -2.747e+00 -2.390e+00\nbeta1  6.650e-03  2.102e-02  2.843e-02  3.636e-02  5.170e-02\nbeta2  3.992e-05  1.250e-04  1.651e-04  2.086e-04  3.161e-04\nbeta3 -8.020e-08  2.840e-08  8.539e-08  1.395e-07  2.574e-07\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC2    &lt;- dic.samples(model2,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC2\n\nMean deviance:  1062 \npenalty 4.401 \nPenalized deviance: 1066 \n\n\nThat raised DIC slightly….\nSo let’s try model with main effects for NEAR_DIST, shape length, and region"
  },
  {
    "objectID": "JAGSattempt.html#main-effects-of-x1-x2-and-x4",
    "href": "JAGSattempt.html#main-effects-of-x1-x2-and-x4",
    "title": "Fire Determinant Project",
    "section": "Main effects of x1, x2, and x4",
    "text": "Main effects of x1, x2, and x4\n\nmodel_string3 &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i] + beta3*x4[i]\n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n    beta3 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags3 = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng, x4 = bernoulli$Region)\n\nmodel3 &lt;- jags.model(model_string3,data = data_jags3, n.chains=3,quiet=TRUE)\nupdate(model3, 100, progress.bar=\"none\")\nparams3  &lt;- c(\"beta0\", \"beta1\",\"beta2\",\"beta3\")\nsamples3 &lt;- coda.samples(model3, \n           variable.names=params3, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples3)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -2.7581787 3.270e-01 5.971e-03      3.847e-02\nbeta1  0.0231639 1.169e-02 2.134e-04      7.101e-04\nbeta2  0.0002234 3.133e-05 5.719e-07      2.030e-06\nbeta3 -0.1415637 1.072e-01 1.957e-03      9.194e-03\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.3827982 -2.9776423 -2.7623603 -2.5517618 -2.0203199\nbeta1  0.0003012  0.0152340  0.0229736  0.0311632  0.0461147\nbeta2  0.0001619  0.0002019  0.0002236  0.0002453  0.0002825\nbeta3 -0.3516355 -0.2125180 -0.1396427 -0.0683358  0.0626193\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC3    &lt;- dic.samples(model3,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC3\n\nMean deviance:  1061 \npenalty 3.933 \nPenalized deviance: 1064"
  },
  {
    "objectID": "JAGSattempt.html#main-effects-of-x1-and-x2",
    "href": "JAGSattempt.html#main-effects-of-x1-and-x2",
    "title": "Fire Determinant Project",
    "section": "Main effects of x1 and x2",
    "text": "Main effects of x1 and x2\n\nmodel_string4 &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i]\n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags4 = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng)\n\nmodel4 &lt;- jags.model(model_string4,data = data_jags4, n.chains=3,quiet=TRUE)\nupdate(model4, 100, progress.bar=\"none\")\nparams4  &lt;- c(\"beta0\", \"beta1\",\"beta2\")\nsamples4 &lt;- coda.samples(model4, \n           variable.names=params4, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples4)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -3.0922451 2.108e-01 3.849e-03      1.540e-02\nbeta1  0.0268819 1.096e-02 2.000e-04      5.902e-04\nbeta2  0.0002266 3.304e-05 6.033e-07      2.202e-06\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.4904193 -3.2403649 -3.0943805 -2.9449044 -2.6705632\nbeta1  0.0047662  0.0195415  0.0268518  0.0343088  0.0480239\nbeta2  0.0001603  0.0002049  0.0002275  0.0002482  0.0002921\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC4    &lt;- dic.samples(model4,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC4\n\nMean deviance:  1061 \npenalty 2.708 \nPenalized deviance: 1064"
  }
]