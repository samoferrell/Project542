[
  {
    "objectID": "ProjectWork.html",
    "href": "ProjectWork.html",
    "title": "ProjectWork",
    "section": "",
    "text": "Data Handling\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata &lt;- read_csv(\"actual_data_merge (1).csv\") |&gt;\nselect(-c(1))\n\nNew names:\nRows: 1282 Columns: 56\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): Name, Category, geometry dbl (52): ...1, ID, NEAR_DIST, Interview,\nShape_Leng, Shape_Area, Region, AU... lgl (1): JUL_2023\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n  rowsums &lt;- data |&gt;\n  select(AUG_2019_dummy:SEP_2023_dummy) |&gt;\n  mutate(total = rowSums(across(everything()), na.rm = TRUE))\n\ndata$total_fires &lt;- rowsums$total\n\n\n\ndata2 &lt;-  data |&gt;\n  pivot_longer(cols = colnames(data[,9:23]), names_to = \"YearMonth\", values_to = \"Occurence\" ) |&gt;\n  select(ID, YearMonth, NEAR_DIST, Name, Category, Interview, Shape_Leng, Shape_Area, Region, YearMonth, total_fires, everything())\ndata2\n\n# A tibble: 19,230 × 43\n           ID YearMonth NEAR_DIST Name  Category Interview Shape_Leng Shape_Area\n        &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1    3.00e10 AUG_2019       11.6 Novo… Agrovila         1      4473.    491009.\n 2    3.00e10 AUG_2020       11.6 Novo… Agrovila         1      4473.    491009.\n 3    3.00e10 AUG_2021       11.6 Novo… Agrovila         1      4473.    491009.\n 4    3.00e10 AUG_2022       11.6 Novo… Agrovila         1      4473.    491009.\n 5    3.00e10 AUG_2023       11.6 Novo… Agrovila         1      4473.    491009.\n 6    3.00e10 JUL_2019       11.6 Novo… Agrovila         1      4473.    491009.\n 7    3.00e10 JUL_2020       11.6 Novo… Agrovila         1      4473.    491009.\n 8    3.00e10 JUL_2021       11.6 Novo… Agrovila         1      4473.    491009.\n 9    3.00e10 JUL_2022       11.6 Novo… Agrovila         1      4473.    491009.\n10    3.00e10 JUL_2023       11.6 Novo… Agrovila         1      4473.    491009.\n# ℹ 19,220 more rows\n# ℹ 35 more variables: Region &lt;dbl&gt;, total_fires &lt;dbl&gt;, `Grand Tota` &lt;dbl&gt;,\n#   geometry &lt;chr&gt;, AUG_2019_dummy &lt;dbl&gt;, AUG_2020_dummy &lt;dbl&gt;,\n#   AUG_2021_dummy &lt;dbl&gt;, AUG_2022_dummy &lt;dbl&gt;, AUG_2023_dummy &lt;dbl&gt;,\n#   JUL_2019_dummy &lt;dbl&gt;, JUL_2020_dummy &lt;dbl&gt;, JUL_2021_dummy &lt;dbl&gt;,\n#   JUL_2022_dummy &lt;dbl&gt;, SEP_2019_dummy &lt;dbl&gt;, SEP_2020_dummy &lt;dbl&gt;,\n#   SEP_2021_dummy &lt;dbl&gt;, SEP_2022_dummy &lt;dbl&gt;, SEP_2023_dummy &lt;dbl&gt;, …"
  },
  {
    "objectID": "JAGSattempt.html",
    "href": "JAGSattempt.html",
    "title": "Eliza Norman 7/1",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE)\n\nSys.setenv(JAGS_HOME=\"C:/Program Files/JAGS/JAGS-4.3.1\")\n\nlibrary(rjags)\n\nWarning: package 'rjags' was built under R version 4.3.3\n\n\nLoading required package: coda\n\n\nLinked to JAGS 4.3.1\n\n\nLoaded modules: basemod,bugs\n\nlibrary(MASS)\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::select() masks MASS::select()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata &lt;- read_csv(\"actual_data_merge (1).csv\")\n\nNew names:\nRows: 1282 Columns: 56\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): Name, Category, geometry dbl (52): ...1, ID, NEAR_DIST, Interview,\nShape_Leng, Shape_Area, Region, AU... lgl (1): JUL_2023\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nrowsums &lt;- data |&gt;\n  select(27:40) |&gt;\n  mutate(total = rowSums(across(everything()), na.rm = TRUE))\n\ndata$total_fires &lt;- rowsums$total\n# \n# \n# \n# \n# data2 &lt;-  data |&gt;\n#   select(-1) |&gt;\n#   pivot_longer(cols = colnames(data[,27:40]), names_to = \"YearMonth\", values_to = \"Occurrence\" )\n\nAdding new variable - takes on 1 if a fire occured, 0 if not:\n\nbernoulli &lt;- data |&gt;\n  mutate(fire = ifelse(total_fires &gt; 0,1,0))\n#View(bernoulli)\n\nTrying with bernoulli data:\n\nOnly main effect for all terms\n\nmodel_string &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i] + beta3*x3[i] + beta4*x4[i] \n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n    beta3 ~ dnorm(0, 1/(10)^2)\n    beta4 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng, x3 = bernoulli$Shape_Area, x4 = bernoulli$Region)\n\nmodel &lt;- jags.model(model_string,data = data_jags, n.chains=3,quiet=TRUE)\nupdate(model, 100, progress.bar=\"none\")\nparams  &lt;- c(\"beta0\", \"beta1\",\"beta2\",\"beta3\",\"beta4\")\nsamples &lt;- coda.samples(model, \n           variable.names=params, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -2.408e+00 4.043e-01 7.381e-03      5.845e-02\nbeta1  2.511e-02 1.202e-02 2.195e-04      7.157e-04\nbeta2  1.283e-04 6.559e-05 1.198e-06      8.760e-06\nbeta3  1.301e-07 8.381e-08 1.530e-09      9.111e-09\nbeta4 -1.720e-01 1.039e-01 1.896e-03      8.997e-03\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.245e+00 -2.674e+00 -2.382e+00 -2.137e+00 -1.635e+00\nbeta1  9.419e-04  1.691e-02  2.559e-02  3.376e-02  4.751e-02\nbeta2  2.959e-06  8.643e-05  1.263e-04  1.728e-04  2.631e-04\nbeta3 -3.702e-08  7.307e-08  1.256e-07  1.865e-07  2.966e-07\nbeta4 -3.781e-01 -2.402e-01 -1.733e-01 -1.038e-01  3.872e-02\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC    &lt;- dic.samples(model,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC\n\nMean deviance:  1060 \npenalty 4.796 \nPenalized deviance: 1064 \n\n\n\nb0 &lt;- c(samples[[1]][,1],samples[[2]][,1])\nb1 &lt;- c(samples[[1]][,2],samples[[2]][,2])\nb2 &lt;- c(samples[[1]][,3],samples[[2]][,3])\nb3 &lt;- c(samples[[1]][,4],samples[[2]][,4])\nb4 &lt;- c(samples[[1]][,5],samples[[2]][,5])\n\n\n\nPrediction\n\n# Combine results from 3 different chains into one by stacking matrices that contain simulations.\nmod1_csim = as.mcmc(do.call(rbind, samples))\n\n# Extract posterior mean of coefficients\npm_coef = colMeans(mod1_csim)\n\n# The matrix multiplication below gives the exponentiation part in equation which will then be used to find estimated probabilities.\n\npredictors &lt;- matrix(c(bernoulli$NEAR_DIST, bernoulli$Shape_Leng, bernoulli$Shape_Area, bernoulli$Region), nrow = 1282, ncol = 4)\n\npm_Xb = pm_coef[\"beta0\"] + predictors %*% pm_coef[1:4] \n# Intercept + Design Matrix*Coefficients\n\n# extract probability (basically undo logit link)\nphat = 1.0 / (1.0 + exp(-pm_Xb))  \n# Predicted probabilities that the Outcome = 1 for each observations\n\nplot(phat, jitter(bernoulli$fire))\n\n\n\n\n\n\n\n(tab0.5 = table(phat &gt; 0.5, bernoulli$fire))\n\n       \n           0    1\n  FALSE   22    2\n  TRUE  1053  205\n\n\n\n\nMain effects of first three vars\n\nmodel_string2 &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i] + beta3*x3[i]\n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n    beta3 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags2 = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng, x3 = bernoulli$Shape_Area)\n\nmodel2 &lt;- jags.model(model_string2,data = data_jags2, n.chains=3,quiet=TRUE)\nupdate(model2, 100, progress.bar=\"none\")\nparams2  &lt;- c(\"beta0\", \"beta1\",\"beta2\",\"beta3\")\nsamples2 &lt;- coda.samples(model2, \n           variable.names=params2, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples2)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -2.888e+00 2.927e-01 5.345e-03      3.063e-02\nbeta1  2.818e-02 1.311e-02 2.393e-04      8.723e-04\nbeta2  1.581e-04 7.142e-05 1.304e-06      1.048e-05\nbeta3  9.710e-08 8.852e-08 1.616e-09      1.112e-08\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.444e+00 -3.083e+00 -2.879e+00 -2.698e+00 -2.298e+00\nbeta1  2.429e-03  1.926e-02  2.842e-02  3.708e-02  5.312e-02\nbeta2  6.208e-06  1.137e-04  1.637e-04  2.059e-04  2.862e-04\nbeta3 -5.335e-08  3.749e-08  8.773e-08  1.486e-07  2.963e-07\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC2    &lt;- dic.samples(model2,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC2\n\nMean deviance:  1062 \npenalty 3.968 \nPenalized deviance: 1066 \n\n\n\n\nThat raised DIC slightly….\n\n\nSo let’s try model with main effects for NEAR_DIST, shape length, and region\n\n\nMain effects of x1, x2, and x4\n\nmodel_string3 &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i] + beta3*x4[i]\n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n    beta3 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags3 = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng, x4 = bernoulli$Region)\n\nmodel3 &lt;- jags.model(model_string3,data = data_jags3, n.chains=3,quiet=TRUE)\nupdate(model3, 100, progress.bar=\"none\")\nparams3  &lt;- c(\"beta0\", \"beta1\",\"beta2\",\"beta3\")\nsamples3 &lt;- coda.samples(model3, \n           variable.names=params3, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples3)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -2.7170740 2.918e-01 5.327e-03      2.983e-02\nbeta1  0.0236009 1.101e-02 2.011e-04      6.040e-04\nbeta2  0.0002188 2.981e-05 5.442e-07      1.891e-06\nbeta3 -0.1534667 9.412e-02 1.718e-03      6.646e-03\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.3554066 -2.8932983 -2.7064663 -2.5152190 -2.1532769\nbeta1  0.0020632  0.0162814  0.0235920  0.0313296  0.0441990\nbeta2  0.0001621  0.0001985  0.0002184  0.0002387  0.0002765\nbeta3 -0.3263799 -0.2200304 -0.1545629 -0.0905722  0.0295435\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC3    &lt;- dic.samples(model3,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC3\n\nMean deviance:  1060 \npenalty 3.994 \nPenalized deviance: 1064 \n\n\n\n\nMain effects of x1 and x2\n\nmodel_string4 &lt;- textConnection(\"model{\n    for (i in 1:length(y)) {\n      y[i] ~ dbern(p[i])\n      logit(p[i]) = beta0 + beta1*x1[i] + beta2*x2[i]\n    }\n    #Uninformative Priors:\n    beta0 ~ dnorm(0 ,1/(10)^2 )\n    beta1 ~ dnorm(0, 1/(10)^2)\n    beta2 ~ dnorm(0, 1/(10)^2)\n\n}\")\n\n# Dr. Reich does not standardize the data, but other resource does\n\n\ndata_jags4 = list(y=bernoulli$fire, x1 = bernoulli$NEAR_DIST, x2 = bernoulli$Shape_Leng)\n\nmodel4 &lt;- jags.model(model_string4,data = data_jags4, n.chains=3,quiet=TRUE)\nupdate(model4, 100, progress.bar=\"none\")\nparams4  &lt;- c(\"beta0\", \"beta1\",\"beta2\")\nsamples4 &lt;- coda.samples(model4, \n           variable.names=params4, \n           n.iter=1000, progress.bar=\"none\")\nsummary(samples4)\n\n\nIterations = 1101:2100\nThinning interval = 1 \nNumber of chains = 3 \nSample size per chain = 1000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean        SD  Naive SE Time-series SE\nbeta0 -3.0859847 2.097e-01 3.828e-03      1.598e-02\nbeta1  0.0267491 1.192e-02 2.176e-04      6.984e-04\nbeta2  0.0002254 3.215e-05 5.870e-07      2.185e-06\n\n2. Quantiles for each variable:\n\n            2.5%        25%        50%        75%      97.5%\nbeta0 -3.4997347 -3.2331194 -3.0832980 -2.9385391 -2.6928104\nbeta1  0.0029333  0.0188619  0.0270303  0.0341435  0.0514142\nbeta2  0.0001659  0.0002029  0.0002241  0.0002472  0.0002902\n\n# Compute DIC - n.iter needs to be the same above and below\nDIC4    &lt;- dic.samples(model4,n.iter=1000,n.thin = 5, progress.bar=\"none\")\nDIC4\n\nMean deviance:  1061 \npenalty 2.957 \nPenalized deviance: 1064"
  }
]